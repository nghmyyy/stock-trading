# Server configuration
server.port=8080

spring.cloud.gateway.routes[0].id=user-service-route
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**

spring.cloud.gateway.routes[1].id=account-service-route
spring.cloud.gateway.routes[1].uri=http://localhost:8083
spring.cloud.gateway.routes[1].predicates[0]=Path=/accounts/**

spring.cloud.gateway.routes[2].id=trading-service-route
spring.cloud.gateway.routes[2].uri=http://localhost:8084
spring.cloud.gateway.routes[2].predicates[0]=Path=/trading/**

# In application.properties

#kafka management service same with port = 8085 and Path
spring.cloud.gateway.routes[3].id=kafka-management-service-route
spring.cloud.gateway.routes[3].uri=http://localhost:8085
spring.cloud.gateway.routes[3].predicates[0]=Path=/sagas/**

spring.cloud.gateway.routes[4].id=market-data-service-route
spring.cloud.gateway.routes[4].uri=http://localhost:8088
spring.cloud.gateway.routes[4].predicates[0]=Path=/market-data/**

spring.cloud.gateway.routes[5].id=market_data_websocket
spring.cloud.gateway.routes[5].uri=ws://localhost:8088
spring.cloud.gateway.routes[5].predicates[0]=Path=/ws/market-data/**

spring.cloud.gateway.routes[6].id=order-service-route
spring.cloud.gateway.routes[6].uri=http://localhost:8087
spring.cloud.gateway.routes[6].predicates[0]=Path=/orders/**

spring.cloud.gateway.routes[7].id=order_websocket
spring.cloud.gateway.routes[7].uri=ws://localhost:8087
spring.cloud.gateway.routes[7].predicates[0]=Path=/ws/orders/**

spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedHeaders=*

# jwt
jwt.secret=mysuperduperlongsecretkeythatismorethan32bytes

#logging.level.org.springframework.cloud.gateway=TRACE
logging.level.org.springframework.cloud.gateway.filter.WebSocketRoutingFilter=ERROR


## Redis Connection Configuration
#spring.data.redis.host=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com
#spring.data.redis.port=14694
#spring.data.redis.username=default
#spring.data.redis.password=1Pox3Zq8mQuUsAvzKlvjdCOJE3xxxprJ
#spring.data.redis.ssl.enabled=false
#
#
#spring.data.redis.jedis.pool.max-active=8
#spring.data.redis.jedis.pool.max-idle=8
#spring.data.redis.jedis.pool.min-idle=1
#spring.data.redis.timeout=5000


spring.jackson.serialization.indent_output=true
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

logging.level.org.springframework.data.redis=DEBUG
logging.level.io.lettuce=DEBUG

logging.level.com.project.apigateway.security=DEBUG
logging.level.com.project.apigateway=DEBUG
logging.level.root=INFO



# Redis Configuration (add to your application-local.properties)
redis.host=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com
redis.port=14694
redis.username=default
redis.password=1Pox3Zq8mQuUsAvzKlvjdCOJE3xxxprJ

# Connection settings
redis.connection.timeout=3000
redis.socket.timeout=3000

# Connection pool settings
redis.pool.max-active=16
redis.pool.max-idle=8
redis.pool.min-idle=4
redis.pool.max-wait=1000

# Cache settings
redis.cache.enabled=true
redis.cache.default-ttl=300
redis.cache.timeout=2000
redis.cache.retry-attempts=3
redis.cache.retry-delay=100
redis.ssl.enabled=false

# Enable Spring Boot Actuator for health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.health.redis.enabled=true

logging.level.com.project.apigateway.filter=DEBUG
