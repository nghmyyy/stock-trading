spring.application.name=kafka-management-service

# Kafka cluster configuration (production)
spring.kafka.bootstrap-servers=kafka-broker1:9092,kafka-broker2:9092,kafka-broker3:9092
spring.kafka.consumer.group-id=saga-orch
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.stocktrading.kafka.model

# Kafka security settings (add these for production)
#spring.kafka.security.protocol=SSL
#spring.kafka.ssl.key-store-location=file:/etc/kafka-management-service/keystore.jks
#spring.kafka.ssl.key-store-password=${KAFKA_KEYSTORE_PASSWORD}
#spring.kafka.ssl.trust-store-location=file:/etc/kafka-management-service/truststore.jks
#spring.kafka.ssl.trust-store-password=${KAFKA_TRUSTSTORE_PASSWORD}

# Producer settings with reliability configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=10
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.enable.idempotence=true

# Consumer performance settings
spring.kafka.consumer.max-poll-records=500
spring.kafka.consumer.heartbeat-interval=3000
spring.kafka.consumer.max-poll-interval-ms=300000
spring.kafka.listener.concurrency=3

# MongoDB production configuration (use environment variable)
spring.data.mongodb.uri=mongodb+srv://admin:hw445Rl1pEAXqhti@cluster-1.rylgk.mongodb.net/?retryWrites=true&w=majority&appName=Cluster-1
spring.data.mongodb.database=OrchestratorServiceDB

# Topic names remain the same
kafka.topics.account-commands=account.commands.deposit
kafka.topics.payment-commands=payment.commands.process
kafka.topics.user-commands=user.commands.verify
kafka.topics.account-events=account.events.deposit
kafka.topics.payment-events=payment.events.process
kafka.topics.user-events=user.events.verify
kafka.topics.dlq=saga.dlq

# Saga timeouts (same as local)
saga.deposit.timeout.verify-identity=5000
saga.deposit.timeout.validate-payment=5000
saga.deposit.timeout.create-transaction=10000
saga.deposit.timeout.process-payment=30000
saga.deposit.timeout.update-transaction=10000
saga.deposit.timeout.update-balance=10000
saga.deposit.retry.max-attempts=3
saga.deposit.retry.backoff-initial-interval=1000
saga.deposit.retry.backoff-multiplier=2.0

# Server configuration
server.port=8085

# Production monitoring and health checks
management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.metrics.export.prometheus.enabled=true
management.endpoint.health.show-details=when_authorized
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Production logging levels
logging.level.root=INFO
logging.level.com.stocktrading.kafka=INFO
logging.level.org.springframework.kafka=WARN
logging.level.org.apache.kafka=WARN