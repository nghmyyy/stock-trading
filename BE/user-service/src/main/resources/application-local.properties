spring.application.name=user-service
spring.data.mongodb.uri=mongodb+srv://admin:hw445Rl1pEAXqhti@cluster-1.rylgk.mongodb.net/?retryWrites=true&w=majority&appName=Cluster-1
spring.data.mongodb.database=authServiceDB
server.port=8081

# --- Logging ---
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=tranhung10122003@gmail.com
spring.mail.password=nmcsvbtsbnxmwgbw
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.debug=true


jwt.secret=mysuperduperlongsecretkeythatismorethan32bytes
jwt.expirationMillis=86400000

# Redis Connection Configuration
spring.data.redis.host=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com
spring.data.redis.port=14694
spring.data.redis.username=default
spring.data.redis.password=1Pox3Zq8mQuUsAvzKlvjdCOJE3xxxprJ

springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs

resetBaseUrl=https://good-musical-joey.ngrok-free.app

account.service.baseUrl=http://localhost:8083

spring.webflux.cors.allowed-origins=https://good-musical-joey.ngrok-free.app
spring.webflux.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.webflux.cors.allowed-headers=*
spring.webflux.cors.allow-credentials=true
spring.webflux.cors.max-age=360

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=user-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Topics
kafka.topics.user-commands.common=user.commands.common
kafka.topics.user-events.common=user.events.common
kafka.topics.user-commands.order-buy=user.commands.order-buy
kafka.topics.user-events.order-buy=user.events.order-buy
kafka.topics.user-commands.order-sell=user.commands.order-sell
kafka.topics.user-events.order-sell=user.events.order-sell